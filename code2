#include <stdio.h>

#define MAX_PROCESSES 10

typedef struct {
    int process_id;
    int burst_time;
    int remaining_time;
} Process;

void round_robin(Process processes[], int n, int quantum) {
    int time = 0;
    int completed_processes = 0;

    while (completed_processes < n) {
        for (int i = 0; i < n; i++) {
            if (processes[i].remaining_time > 0) {
                if (processes[i].remaining_time > quantum) {
                    time += quantum;
                    processes[i].remaining_time -= quantum;
                } else {
                    time += processes[i].remaining_time;
                    processes[i].remaining_time = 0;
                    completed_processes++;
                    printf("Process %d completed at time %d\n", processes[i].process_id, time);
                }
            }
        }
    }
}

int main() {
    int n, quantum;
    Process processes[MAX_PROCESSES];

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    if (n > MAX_PROCESSES) {
        printf("Maximum number of processes is %d\n", MAX_PROCESSES);
        return 1;
    }

    for (int i = 0; i < n; i++) {
        processes[i].process_id = i + 1;
        printf("Enter burst time for process %d: ", i + 1);
        scanf("%d", &processes[i].burst_time);
        processes[i].remaining_time = processes[i].burst_time;
    }

    printf("Enter the quantum time: ");
    scanf("%d", &quantum);

    round_robin(processes, n, quantum);

    return 0;
}
